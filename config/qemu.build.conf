# Â© 2021 Qualcomm Innovation Center, Inc. All rights reserved.
#
# SPDX-License-Identifier: BSD-3-Clause

program resource-manager
arch aarch64

board sm8150

target_triple aarch64-linux-gnu
cflags -march=armv8.5-a+rng -mcpu=cortex-a75
ldflags -mcpu=cortex-a75

# to override musl libc register_t
configs __DEFINED_register_t

# for debug
# FIXME: check how to conditionally enable debug or use different variant
# config file?
cflags -O1 -g
#configs NDEBUG

cflags -std=gnu18
# Turn all warnings on as errors by default
cflags -Weverything
cflags -Werror

# suppress the warning for header file from compiler
#cflags -Wno-reserved-id-macro

# Unused macros are expected
#cflags -Wno-unused-macros

# MISRA rule 16.4 requires default: in every switch, even if it is covered
cflags -Wno-covered-switch-default

# No need for C++ compatibility
cflags -Wno-c++98-compat
cflags -Wno-c++-compat

# No need for GCC compatibility
cflags -Wno-gcc-compat

# Assume undefined macro as 0
cflags -Wno-undef

# Section garbage collection, reduce size & do better job to remove dead code
# it's better to disable them for gprof & debug.
cflags -ffunction-sections
cflags -fdata-sections

# target specific cflags
cflags -fpie

# target specific ldflags
ldflags -static-pie

# Use C18. For the purposes of MISRA, the language is C99 and all differences
# between C99 and C18 are language extensions permitted by a project deviation
# from rule 1.2.
ldflags -Wl,--gc-sections

ldflags -static
ldflags -fuse-ld=lld --rtlib=compiler-rt

# Set the max-page-size to prevent large ELF alignments
ldflags -Wl,-z,max-page-size=4096
# Set the separate-loadable-segments for ELF alignments
ldflags -Wl,-z,separate-loadable-segments

include include

sub_directory src
sub_directory arch/armv8
sub_directory platform/qemu

end_program
